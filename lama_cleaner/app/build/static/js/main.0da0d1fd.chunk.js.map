{"version":3,"sources":["components/Button.tsx","components/FileSelect.tsx","components/Modal.tsx","components/ShortcutsModal.tsx","utils.ts","adapters/inpainting.ts","components/Slider.tsx","components/SizeSelector.tsx","Editor.tsx","App.tsx","index.tsx"],"names":["Button","props","children","className","disabled","icon","primary","onKeyDown","onClick","onDown","onUp","useState","active","setActive","background","role","e","currentTarget","blur","onPointerDown","ev","nativeEvent","onPointerUp","tabIndex","join","FileSelect","onSelection","dragHover","setDragHover","Math","random","toString","uploadElemId","onFileSelected","file","type","match","size","Error","alert","message","getFile","entry","a","Promise","resolve","getAllFileEntries","items","fileEntries","queue","i","length","push","webkitGetAsEntry","shift","isFile","isDirectory","readAllDirectoryEntries","createReader","directoryReader","entries","readEntriesPromise","readEntries","reject","preventDefault","dataTransfer","htmlFor","onDrop","onDragOver","stopPropagation","onDragLeave","id","name","onChange","files","accept","Modal","onClose","ref","useRef","useClickAway","useKey","event","ShortCut","content","ShortcutsModal","dataURItoBlob","dataURI","mime","split","binary","atob","array","charCodeAt","Blob","Uint8Array","loadImage","image","src","initSRC","img","onload","onerror","err","API_ENDPOINT","process","inpaint","imageFile","maskBase64","sizeLimit","fd","FormData","append","mask","undefined","fetch","method","body","then","r","blob","res","URL","createObjectURL","Slider","value","label","min","max","step","parseInt","sizes","SizeSelector","originalHeight","originalWidth","getSizeShowName","scale","newHeight","ceil","newWidth","getValidSizes","useCallback","longSide","validSizes","s","getValidSize","indexOf","Options","style","top","map","Option","selected","onFocus","BRUSH_COLOR","drawLines","ctx","lines","color","strokeStyle","lineCap","lineJoin","forEach","line","pts","lineWidth","beginPath","moveTo","x","y","pt","lineTo","stroke","Editor","brushSize","setBrushSize","Image","isLoaded","setIsLoaded","useEffect","useImage","original","isOriginalLoaded","renders","setRenders","context","setContext","document","createElement","maskCanvas","setLines","lines4Show","setLines4Show","historyLineCount","setHistoryLineCount","setCoords","showBrush","setShowBrush","isPanning","setIsPanning","showOriginal","setShowOriginal","isInpaintingLoading","setIsInpaintingLoading","showSeparator","setShowSeparator","setScale","minScale","setMinScale","useLocalStorage","setSizeLimit","windowSize","useWindowSize","viewportRef","isDraging","setIsDraging","isMultiStrokeKeyPressed","setIsMultiStrokeKeyPressed","draw","clearRect","canvas","width","height","currRender","drawImage","naturalWidth","naturalHeight","refreshCanvasMask","getContext","runInpainting","toDataURL","newRender","hadDrawSomething","hadRunInpainting","clearDrawing","predicate","key","rW","rH","resetZoom","viewport","current","offsetX","offsetY","setTransform","state","onPaint","px","py","undo","l","count","pop","isCmdZ","metaKey","ctrlKey","useKeyPressEvent","setTimeout","toggleShowBrush","newState","getCursor","currentBrushSize","onMouseMove","mouseEvent","pageX","pageY","onMouseUp","panning","velocityDisabled","wheel","centerZoomedOut","alignmentAnimation","centerOnInit","limitToBounds","doubleClick","initialScale","onZoom","wrapperStyle","contentClass","cursor","onContextMenu","onMouseOver","onMouseLeave","onMouseDown","round","transitionProperty","transitionTimingFunction","transitionDuration","alt","maxWidth","curScale","getCurScale","left","transform","getBrushStyle","_sizeLimit","viewBox","fill","xmlns","d","replace","uri","link","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","remove","downloadImage","currentSrc","zIndex","marginLeft","App","setFile","useToggle","showShortcuts","toggleShowShortcuts","preserveAspectRatio","f","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0da0d1fd.chunk.js","sourcesContent":["import React, { ReactNode, useState } from 'react'\r\n\r\ninterface ButtonProps {\r\n  children?: ReactNode\r\n  className?: string\r\n  icon?: ReactNode\r\n  primary?: boolean\r\n  disabled?: boolean\r\n  onKeyDown?: () => void\r\n  onClick?: () => void\r\n  onDown?: (ev: PointerEvent) => void\r\n  onUp?: (ev: PointerEvent) => void\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    children,\r\n    className,\r\n    disabled,\r\n    icon,\r\n    primary,\r\n    onKeyDown,\r\n    onClick,\r\n    onDown,\r\n    onUp,\r\n  } = props\r\n  const [active, setActive] = useState(false)\r\n  let background = ''\r\n  if (primary && !disabled) {\r\n    background = 'bg-primary hover:bg-black hover:text-white'\r\n  }\r\n  if (active) {\r\n    background = 'bg-black text-white'\r\n  }\r\n  if (!primary && !active) {\r\n    background = 'hover:bg-primary'\r\n  }\r\n\r\n  const blurOnClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    e.currentTarget.blur()\r\n    onClick?.()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      role=\"button\"\r\n      onKeyDown={onKeyDown}\r\n      onClick={blurOnClick}\r\n      onPointerDown={(ev: React.PointerEvent<HTMLDivElement>) => {\r\n        setActive(true)\r\n        onDown?.(ev.nativeEvent)\r\n      }}\r\n      onPointerUp={(ev: React.PointerEvent<HTMLDivElement>) => {\r\n        setActive(false)\r\n        onUp?.(ev.nativeEvent)\r\n      }}\r\n      tabIndex={-1}\r\n      className={[\r\n        'inline-flex py-3 px-3 rounded-md cursor-pointer',\r\n        children ? 'space-x-3' : '',\r\n        background,\r\n        disabled ? 'pointer-events-none opacity-50' : '',\r\n        className,\r\n      ].join(' ')}\r\n    >\r\n      {icon}\r\n      <span className=\"whitespace-nowrap select-none\">{children}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\ntype FileSelectProps = {\r\n  onSelection: (file: File) => void\r\n}\r\n\r\nexport default function FileSelect(props: FileSelectProps) {\r\n  const { onSelection } = props\r\n\r\n  const [dragHover, setDragHover] = useState(false)\r\n  const [uploadElemId] = useState(`file-upload-${Math.random().toString()}`)\r\n\r\n  function onFileSelected(file: File) {\r\n    if (!file) {\r\n      return\r\n    }\r\n    // Skip non-image files\r\n    const isImage = file.type.match('image.*')\r\n    if (!isImage) {\r\n      return\r\n    }\r\n    try {\r\n      // Check if file is larger than 20mb\r\n      if (file.size > 20 * 1024 * 1024) {\r\n        throw new Error('file too large')\r\n      }\r\n      onSelection(file)\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n      alert(`error: ${(e as any).message}`)\r\n    }\r\n  }\r\n\r\n  async function getFile(entry: any): Promise<File> {\r\n    return new Promise(resolve => {\r\n      entry.file((file: File) => resolve(file))\r\n    })\r\n  }\r\n\r\n  /* eslint-disable no-await-in-loop */\r\n\r\n  // Drop handler function to get all files\r\n  async function getAllFileEntries(items: DataTransferItemList) {\r\n    const fileEntries: Array<File> = []\r\n    // Use BFS to traverse entire directory/file structure\r\n    const queue = []\r\n    // Unfortunately items is not iterable i.e. no forEach\r\n    for (let i = 0; i < items.length; i += 1) {\r\n      queue.push(items[i].webkitGetAsEntry())\r\n    }\r\n    while (queue.length > 0) {\r\n      const entry = queue.shift()\r\n      if (entry?.isFile) {\r\n        // Only append images\r\n        const file = await getFile(entry)\r\n        fileEntries.push(file)\r\n      } else if (entry?.isDirectory) {\r\n        queue.push(\r\n          ...(await readAllDirectoryEntries((entry as any).createReader()))\r\n        )\r\n      }\r\n    }\r\n    return fileEntries\r\n  }\r\n\r\n  // Get all the entries (files or sub-directories) in a directory\r\n  // by calling readEntries until it returns empty array\r\n  async function readAllDirectoryEntries(directoryReader: any) {\r\n    const entries = []\r\n    let readEntries = await readEntriesPromise(directoryReader)\r\n    while (readEntries.length > 0) {\r\n      entries.push(...readEntries)\r\n      readEntries = await readEntriesPromise(directoryReader)\r\n    }\r\n    return entries\r\n  }\r\n\r\n  /* eslint-enable no-await-in-loop */\r\n\r\n  // Wrap readEntries in a promise to make working with readEntries easier\r\n  // readEntries will return only some of the entries in a directory\r\n  // e.g. Chrome returns at most 100 entries at a time\r\n  async function readEntriesPromise(directoryReader: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      directoryReader.readEntries(resolve, reject)\r\n    })\r\n  }\r\n\r\n  async function handleDrop(ev: React.DragEvent) {\r\n    ev.preventDefault()\r\n    const items = await getAllFileEntries(ev.dataTransfer.items)\r\n    setDragHover(false)\r\n    onFileSelected(items[0])\r\n  }\r\n\r\n  return (\r\n    <label\r\n      htmlFor={uploadElemId}\r\n      className=\"block w-full h-full group relative cursor-pointer rounded-md font-medium focus-within:outline-none\"\r\n    >\r\n      <div\r\n        className={[\r\n          'w-full h-full flex items-center justify-center px-6 pt-5 pb-6 text-md',\r\n          'border-2 border-dashed rounded-md',\r\n          'hover:border-black hover:bg-primary',\r\n          'text-center',\r\n          dragHover ? 'border-black bg-primary' : 'bg-gray-100 border-gray-300',\r\n        ].join(' ')}\r\n        onDrop={handleDrop}\r\n        onDragOver={ev => {\r\n          ev.stopPropagation()\r\n          ev.preventDefault()\r\n          setDragHover(true)\r\n        }}\r\n        onDragLeave={() => setDragHover(false)}\r\n      >\r\n        <input\r\n          id={uploadElemId}\r\n          name={uploadElemId}\r\n          type=\"file\"\r\n          className=\"sr-only\"\r\n          onChange={ev => {\r\n            const file = ev.currentTarget.files?.[0]\r\n            if (file) {\r\n              onFileSelected(file)\r\n            }\r\n          }}\r\n          accept=\"image/png, image/jpeg\"\r\n        />\r\n        <p className=\"hidden sm:block\">Click here or drag an image file</p>\r\n        <p className=\"sm:hidden\">Tap here to load your picture</p>\r\n      </div>\r\n    </label>\r\n  )\r\n}\r\n","import { XIcon } from '@heroicons/react/outline'\r\nimport React, { ReactNode, useRef } from 'react'\r\nimport { useClickAway, useKey } from 'react-use'\r\nimport Button from './Button'\r\n\r\ninterface ModalProps {\r\n  children?: ReactNode\r\n  onClose?: () => void\r\n  className?: string\r\n}\r\n\r\nexport default function Modal(props: ModalProps) {\r\n  const { children, onClose, className } = props\r\n  const ref = useRef(null)\r\n\r\n  useClickAway(ref, () => {\r\n    onClose?.()\r\n  })\r\n\r\n  useKey('Escape', onClose, {\r\n    event: 'keydown',\r\n  })\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        'absolute w-full h-full flex justify-center items-center',\r\n        'z-20',\r\n        'bg-gray-300 bg-opacity-40 backdrop-filter backdrop-blur-md',\r\n      ].join(' ')}\r\n    >\r\n      <div\r\n        ref={ref}\r\n        className={`bg-white max-w-4xl relative rounded-md shadow-md ${\r\n          className || 'p-8 sm:p-12'\r\n        }`}\r\n      >\r\n        <Button\r\n          icon={<XIcon className=\"w-6 h-6\" />}\r\n          className={[\r\n            'absolute right-4 top-4 rounded-full bg-gray-100 w-10 h-10',\r\n            'flex justify-center items-center py-0 px-0 sm:px-0',\r\n          ].join(' ')}\r\n          onClick={onClose}\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport Modal from './Modal'\r\n\r\ninterface Shortcut {\r\n  children: ReactNode\r\n  content: string\r\n}\r\n\r\nfunction ShortCut(props: Shortcut) {\r\n  const { children, content } = props\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-row space-x-6 justify-between\">\r\n      <div className=\"mr-12 border-2 rounded-xl px-2 py-1\">{children}</div>\r\n      <div className=\"flex flex-col justify-center\">{content}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ShortcutsModalProps {\r\n  onClose?: () => void\r\n}\r\n\r\nexport default function ShortcutsModal(props: ShortcutsModalProps) {\r\n  const { onClose } = props\r\n  return (\r\n    <Modal onClose={onClose} className=\"h-full sm:h-auto p-0 sm:p-0\">\r\n      <div className=\"h-full sm:h-auto flex flex-col sm:flex-row\">\r\n        <div className=\"flex sm:p-14 flex flex-col justify-center space-y-6\">\r\n          <ShortCut content=\"Enable multi-stroke mask drawing\">\r\n            <p>Hold Cmd/Ctrl</p>\r\n          </ShortCut>\r\n          <ShortCut content=\"Undo inpainting\">\r\n            <p>Cmd/Ctrl + z</p>\r\n          </ShortCut>\r\n          <ShortCut content=\"Pan\">\r\n            <p>Space & Drag</p>\r\n          </ShortCut>\r\n          <ShortCut content=\"View original image\">\r\n            <p>Hold Tab</p>\r\n          </ShortCut>\r\n          <ShortCut content=\"Reset zoom/pan & Cancel mask drawing\">\r\n            <p>Esc</p>\r\n          </ShortCut>\r\n          <ShortCut content=\"Decrease Brush Size\">\r\n            <p>[</p>\r\n          </ShortCut>\r\n          <ShortCut content=\"Increase Brush Size\">\r\n            <p>]</p>\r\n          </ShortCut>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport function dataURItoBlob(dataURI: string) {\r\n  const mime = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n  const binary = atob(dataURI.split(',')[1])\r\n  const array = []\r\n  for (let i = 0; i < binary.length; i += 1) {\r\n    array.push(binary.charCodeAt(i))\r\n  }\r\n  return new Blob([new Uint8Array(array)], { type: mime })\r\n}\r\n\r\n// const dataURItoBlob = (dataURI: string) => {\r\n//   const bytes =\r\n//     dataURI.split(',')[0].indexOf('base64') >= 0\r\n//       ? atob(dataURI.split(',')[1])\r\n//       : unescape(dataURI.split(',')[1])\r\n//   const mime = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n//   const max = bytes.length\r\n//   const ia = new Uint8Array(max)\r\n//   for (var i = 0; i < max; i++) ia[i] = bytes.charCodeAt(i)\r\n//   return new Blob([ia], { type: mime })\r\n// }\r\n\r\nexport function downloadImage(uri: string, name: string) {\r\n  const link = document.createElement('a')\r\n  link.href = uri\r\n  link.download = name\r\n\r\n  // this is necessary as link.click() does not work on the latest firefox\r\n  link.dispatchEvent(\r\n    new MouseEvent('click', {\r\n      bubbles: true,\r\n      cancelable: true,\r\n      view: window,\r\n    })\r\n  )\r\n\r\n  setTimeout(() => {\r\n    // For Firefox it is necessary to delay revoking the ObjectURL\r\n    // window.URL.revokeObjectURL(base64)\r\n    link.remove()\r\n  }, 100)\r\n}\r\n\r\nexport function shareImage(base64: string, name: string) {\r\n  const blob = dataURItoBlob(base64)\r\n  const filesArray = [new File([blob], name, { type: 'image/jpeg' })]\r\n  const shareData = {\r\n    files: filesArray,\r\n  }\r\n  // eslint-disable-nextline\r\n  const nav: any = navigator\r\n  const canShare = nav.canShare && nav.canShare(shareData)\r\n  const userAgent = navigator.userAgent || navigator.vendor\r\n  const isMobile = /android|iPad|iPhone|iPod/i.test(userAgent)\r\n  if (canShare && isMobile) {\r\n    navigator.share(shareData)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function loadImage(image: HTMLImageElement, src: string) {\r\n  return new Promise((resolve, reject) => {\r\n    const initSRC = image.src\r\n    const img = image\r\n    img.onload = resolve\r\n    img.onerror = err => {\r\n      img.src = initSRC\r\n      reject(err)\r\n    }\r\n    img.src = src\r\n  })\r\n}\r\n\r\nexport function useImage(file: File): [HTMLImageElement, boolean] {\r\n  const [image] = useState(new Image())\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    image.onload = () => {\r\n      setIsLoaded(true)\r\n    }\r\n    setIsLoaded(false)\r\n    image.src = URL.createObjectURL(file)\r\n    return () => {\r\n      image.onload = null\r\n    }\r\n  }, [file, image])\r\n\r\n  return [image, isLoaded]\r\n}\r\n\r\n// https://stackoverflow.com/questions/23945494/use-html5-to-resize-an-image-before-upload\r\ninterface ResizeImageFileResult {\r\n  file: File\r\n  resized: boolean\r\n  originalWidth?: number\r\n  originalHeight?: number\r\n}\r\nexport function resizeImageFile(\r\n  file: File,\r\n  maxSize: number\r\n): Promise<ResizeImageFileResult> {\r\n  const reader = new FileReader()\r\n  const image = new Image()\r\n  const canvas = document.createElement('canvas')\r\n\r\n  const resize = (): ResizeImageFileResult => {\r\n    let { width, height } = image\r\n\r\n    if (width > height) {\r\n      if (width > maxSize) {\r\n        height *= maxSize / width\r\n        width = maxSize\r\n      }\r\n    } else if (height > maxSize) {\r\n      width *= maxSize / height\r\n      height = maxSize\r\n    }\r\n\r\n    if (width === image.width && height === image.height) {\r\n      return { file, resized: false }\r\n    }\r\n\r\n    canvas.width = width\r\n    canvas.height = height\r\n    const ctx = canvas.getContext('2d')\r\n    if (!ctx) {\r\n      throw new Error('could not get context')\r\n    }\r\n    canvas.getContext('2d')?.drawImage(image, 0, 0, width, height)\r\n    const dataUrl = canvas.toDataURL('image/jpeg')\r\n    const blob = dataURItoBlob(dataUrl)\r\n    const f = new File([blob], file.name, {\r\n      type: file.type,\r\n    })\r\n    return {\r\n      file: f,\r\n      resized: true,\r\n      originalWidth: image.width,\r\n      originalHeight: image.height,\r\n    }\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    if (!file.type.match(/image.*/)) {\r\n      reject(new Error('Not an image'))\r\n      return\r\n    }\r\n    reader.onload = (readerEvent: any) => {\r\n      image.onload = () => resolve(resize())\r\n      image.src = readerEvent.target.result\r\n    }\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\n","import { dataURItoBlob } from '../utils'\r\n\r\nexport const API_ENDPOINT = `${process.env.REACT_APP_INPAINTING_URL}/inpaint`\r\n\r\nexport default async function inpaint(\r\n  imageFile: File,\r\n  maskBase64: string,\r\n  sizeLimit?: string\r\n) {\r\n  // 1080, 2000, Original\r\n  const fd = new FormData()\r\n  fd.append('image', imageFile)\r\n  const mask = dataURItoBlob(maskBase64)\r\n  fd.append('mask', mask)\r\n\r\n  if (sizeLimit === undefined) {\r\n    fd.append('sizeLimit', '1080')\r\n  } else {\r\n    fd.append('sizeLimit', sizeLimit)\r\n  }\r\n\r\n  const res = await fetch(API_ENDPOINT, {\r\n    method: 'POST',\r\n    body: fd,\r\n  }).then(async r => {\r\n    return r.blob()\r\n  })\r\n\r\n  return URL.createObjectURL(res)\r\n}\r\n","import React from 'react'\r\n\r\ntype SliderProps = {\r\n  label?: any\r\n  value?: number\r\n  min?: number\r\n  max?: number\r\n  onChange: (value: number) => void\r\n}\r\n\r\nexport default function Slider(props: SliderProps) {\r\n  const { value, onChange, label, min, max } = props\r\n\r\n  const step = ((max || 100) - (min || 0)) / 100\r\n\r\n  return (\r\n    <div className=\"inline-flex items-center space-x-4 text-black\">\r\n      <span>{label}</span>\r\n      <input\r\n        className={[\r\n          'appearance-none rounded-lg h-4',\r\n          'bg-primary',\r\n          'w-24 md:w-auto',\r\n        ].join(' ')}\r\n        type=\"range\"\r\n        step={step}\r\n        min={min}\r\n        max={max}\r\n        value={value}\r\n        onChange={ev => {\r\n          ev.preventDefault()\r\n          ev.stopPropagation()\r\n          onChange(parseInt(ev.currentTarget.value, 10))\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { FocusEvent, useCallback } from 'react'\r\nimport { Listbox } from '@headlessui/react'\r\nimport { SelectorIcon } from '@heroicons/react/solid'\r\n\r\nconst sizes = ['720', '1080', '2000', 'Original']\r\n\r\ntype SizeSelectorProps = {\r\n  value: string\r\n  originalWidth: number\r\n  originalHeight: number\r\n  onChange: (value: string) => void\r\n}\r\n\r\nexport default function SizeSelector(props: SizeSelectorProps) {\r\n  const { value, originalHeight, originalWidth, onChange } = props\r\n\r\n  const getSizeShowName = (size: string) => {\r\n    if (size === 'Original') {\r\n      return `${originalWidth}x${originalHeight}`\r\n    }\r\n    const length: number = parseInt(size, 10)\r\n    const longSide: number =\r\n      originalWidth > originalHeight ? originalWidth : originalHeight\r\n    const scale = length / longSide\r\n\r\n    if (originalWidth > originalHeight) {\r\n      const newHeight = Math.ceil(scale * originalHeight)\r\n      return `${size}x${newHeight}`\r\n    }\r\n    const newWidth = Math.ceil(scale * originalWidth)\r\n    return `${newWidth}x${size}`\r\n  }\r\n\r\n  const onButtonFocus = (e: FocusEvent<any>) => {\r\n    e.currentTarget.blur()\r\n  }\r\n\r\n  const getValidSizes = useCallback((): string[] => {\r\n    const longSide: number =\r\n      originalWidth > originalHeight ? originalWidth : originalHeight\r\n\r\n    const validSizes = []\r\n    for (let i = 0; i < sizes.length; i += 1) {\r\n      const s = sizes[i]\r\n      if (s === 'Original') {\r\n        validSizes.push(s)\r\n      } else if (parseInt(s, 10) <= longSide) {\r\n        validSizes.push(s)\r\n      }\r\n    }\r\n    return validSizes\r\n  }, [originalHeight, originalWidth])\r\n\r\n  const getValidSize = useCallback(() => {\r\n    if (getValidSizes().indexOf(value) === -1) {\r\n      return getValidSizes()[0]\r\n    }\r\n    return value\r\n  }, [value, getValidSizes])\r\n\r\n  return (\r\n    <div className=\"w-32\">\r\n      <Listbox value={getValidSize()} onChange={onChange}>\r\n        <div className=\"relative\">\r\n          <Listbox.Options\r\n            style={{ top: `-${getValidSizes().length * 40 + 5}px` }}\r\n            className=\"absolute mb-1 w-full overflow-auto text-base bg-opacity-10 bg-black backdrop-blur rounded-md max-h-60 outline-none sm:text-sm\"\r\n          >\r\n            {getValidSizes().map(size => (\r\n              <Listbox.Option\r\n                key={size}\r\n                className={({ active }) =>\r\n                  `${active ? 'bg-black bg-opacity-10' : 'text-gray-900'}\r\n                   cursor-default select-none relative py-2 pl-4 pr-4`\r\n                }\r\n                value={size}\r\n              >\r\n                {({ selected }) => (\r\n                  <>\r\n                    <span\r\n                      className={`${\r\n                        selected ? 'font-medium' : 'font-normal'\r\n                      } block truncate`}\r\n                    >\r\n                      {getSizeShowName(size)}\r\n                    </span>\r\n                    {/* {selected ? (\r\n                      <span\r\n                        className={`${\r\n                          active ? 'text-amber-600' : 'text-amber-600'\r\n                        }\r\n                                absolute inset-y-0 left-0 flex items-center pl-3`}\r\n                      >\r\n                        <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                      </span>\r\n                    ) : null} */}\r\n                  </>\r\n                )}\r\n              </Listbox.Option>\r\n            ))}\r\n          </Listbox.Options>\r\n          <Listbox.Button\r\n            onFocus={onButtonFocus}\r\n            className=\"relative w-full inline-flex w-full px-4 py-2 text-sm font-medium bg-black rounded-md bg-opacity-10  focus:outline-none \"\r\n          >\r\n            <span className=\"block truncate\">\r\n              {getSizeShowName(getValidSize())}\r\n            </span>\r\n            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n              <SelectorIcon\r\n                className=\"w-5 h-5 text-gray-400\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            </span>\r\n          </Listbox.Button>\r\n        </div>\r\n      </Listbox>\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  ArrowsExpandIcon,\r\n  DownloadIcon,\r\n  EyeIcon,\r\n} from '@heroicons/react/outline'\r\nimport React, {\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport {\r\n  ReactZoomPanPinchRef,\r\n  TransformComponent,\r\n  TransformWrapper,\r\n} from 'react-zoom-pan-pinch'\r\nimport {\r\n  useWindowSize,\r\n  useLocalStorage,\r\n  useKey,\r\n  useKeyPressEvent,\r\n} from 'react-use'\r\nimport inpaint from './adapters/inpainting'\r\nimport Button from './components/Button'\r\nimport Slider from './components/Slider'\r\nimport SizeSelector from './components/SizeSelector'\r\nimport { downloadImage, loadImage, useImage } from './utils'\r\n\r\nconst TOOLBAR_SIZE = 200\r\nconst BRUSH_COLOR = 'rgba(189, 255, 1, 0.75)'\r\n// const NO_COLOR = 'rgba(255,255,255,0)'\r\n\r\ninterface EditorProps {\r\n  file: File\r\n}\r\n\r\ninterface Line {\r\n  size?: number\r\n  pts: { x: number; y: number }[]\r\n}\r\n\r\nfunction drawLines(\r\n  ctx: CanvasRenderingContext2D,\r\n  lines: Line[],\r\n  color = BRUSH_COLOR\r\n) {\r\n  ctx.strokeStyle = color\r\n  ctx.lineCap = 'round'\r\n  ctx.lineJoin = 'round'\r\n\r\n  lines.forEach(line => {\r\n    if (!line?.pts.length || !line.size) {\r\n      return\r\n    }\r\n    ctx.lineWidth = line.size\r\n    ctx.beginPath()\r\n    ctx.moveTo(line.pts[0].x, line.pts[0].y)\r\n    line.pts.forEach(pt => ctx.lineTo(pt.x, pt.y))\r\n    ctx.stroke()\r\n  })\r\n}\r\n\r\nexport default function Editor(props: EditorProps) {\r\n  const { file } = props\r\n  const [brushSize, setBrushSize] = useState(40)\r\n  const [original, isOriginalLoaded] = useImage(file)\r\n  const [renders, setRenders] = useState<HTMLImageElement[]>([])\r\n  const [context, setContext] = useState<CanvasRenderingContext2D>()\r\n  const [maskCanvas] = useState<HTMLCanvasElement>(() => {\r\n    return document.createElement('canvas')\r\n  })\r\n  const [lines, setLines] = useState<Line[]>([{ pts: [] }])\r\n  const [lines4Show, setLines4Show] = useState<Line[]>([{ pts: [] }])\r\n  const [historyLineCount, setHistoryLineCount] = useState<number[]>([])\r\n  const [{ x, y }, setCoords] = useState({ x: -1, y: -1 })\r\n  const [showBrush, setShowBrush] = useState(false)\r\n  const [isPanning, setIsPanning] = useState<boolean>(false)\r\n  const [showOriginal, setShowOriginal] = useState(false)\r\n  const [isInpaintingLoading, setIsInpaintingLoading] = useState(false)\r\n  const [showSeparator, setShowSeparator] = useState(false)\r\n  const [scale, setScale] = useState<number>(1)\r\n  const [minScale, setMinScale] = useState<number>()\r\n  // ['1080', '2000', 'Original']\r\n  const [sizeLimit, setSizeLimit] = useLocalStorage('sizeLimit', '1080')\r\n  const windowSize = useWindowSize()\r\n  const viewportRef = useRef<ReactZoomPanPinchRef | undefined | null>()\r\n\r\n  const [isDraging, setIsDraging] = useState(false)\r\n  const [isMultiStrokeKeyPressed, setIsMultiStrokeKeyPressed] = useState(false)\r\n\r\n  const draw = useCallback(() => {\r\n    if (!context) {\r\n      return\r\n    }\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height)\r\n    const currRender = renders[renders.length - 1]\r\n    if (currRender?.src) {\r\n      context.drawImage(\r\n        currRender,\r\n        0,\r\n        0,\r\n        original.naturalWidth,\r\n        original.naturalHeight\r\n      )\r\n    } else {\r\n      context.drawImage(original, 0, 0)\r\n    }\r\n    drawLines(context, lines4Show)\r\n  }, [context, lines4Show, original, renders])\r\n\r\n  const refreshCanvasMask = useCallback(() => {\r\n    if (!context?.canvas.width || !context?.canvas.height) {\r\n      throw new Error('canvas has invalid size')\r\n    }\r\n    maskCanvas.width = context?.canvas.width\r\n    maskCanvas.height = context?.canvas.height\r\n    const ctx = maskCanvas.getContext('2d')\r\n    if (!ctx) {\r\n      throw new Error('could not retrieve mask canvas')\r\n    }\r\n\r\n    drawLines(ctx, lines, 'white')\r\n  }, [context?.canvas.height, context?.canvas.width, lines, maskCanvas])\r\n\r\n  const runInpainting = useCallback(async () => {\r\n    setIsInpaintingLoading(true)\r\n    refreshCanvasMask()\r\n    try {\r\n      const res = await inpaint(file, maskCanvas.toDataURL(), sizeLimit)\r\n      if (!res) {\r\n        throw new Error('empty response')\r\n      }\r\n      // TODO: fix the render if it failed loading\r\n      const newRender = new Image()\r\n      await loadImage(newRender, res)\r\n      renders.push(newRender)\r\n      lines.push({ pts: [] } as Line)\r\n      setRenders([...renders])\r\n      setLines([...lines])\r\n\r\n      historyLineCount.push(lines4Show.length)\r\n      setHistoryLineCount(historyLineCount)\r\n      lines4Show.length = 0\r\n      setLines4Show([{ pts: [] } as Line])\r\n    } catch (e: any) {\r\n      // eslint-disable-next-line\r\n      alert(e.message ? e.message : e.toString())\r\n    }\r\n    setIsInpaintingLoading(false)\r\n    draw()\r\n  }, [\r\n    draw,\r\n    file,\r\n    lines,\r\n    lines4Show,\r\n    maskCanvas,\r\n    refreshCanvasMask,\r\n    renders,\r\n    sizeLimit,\r\n    historyLineCount,\r\n  ])\r\n\r\n  const hadDrawSomething = () => {\r\n    return lines4Show.length !== 0 && lines4Show[0].pts.length !== 0\r\n  }\r\n\r\n  const hadRunInpainting = () => {\r\n    return renders.length !== 0\r\n  }\r\n\r\n  const clearDrawing = () => {\r\n    setIsDraging(false)\r\n    lines4Show.length = 0\r\n    setLines4Show([{ pts: [] } as Line])\r\n  }\r\n\r\n  const handleMultiStrokeKeyDown = () => {\r\n    if (isInpaintingLoading) {\r\n      return\r\n    }\r\n    setIsMultiStrokeKeyPressed(true)\r\n  }\r\n\r\n  const handleMultiStrokeKeyup = () => {\r\n    if (!isMultiStrokeKeyPressed) {\r\n      return\r\n    }\r\n    if (isInpaintingLoading) {\r\n      return\r\n    }\r\n\r\n    setIsMultiStrokeKeyPressed(false)\r\n    if (hadDrawSomething()) {\r\n      runInpainting()\r\n    }\r\n  }\r\n\r\n  const predicate = (event: KeyboardEvent) => {\r\n    return event.key === 'Control' || event.key === 'Meta'\r\n  }\r\n\r\n  useKey(predicate, handleMultiStrokeKeyup, { event: 'keyup' }, [\r\n    isInpaintingLoading,\r\n    isMultiStrokeKeyPressed,\r\n    hadDrawSomething,\r\n  ])\r\n\r\n  useKey(\r\n    predicate,\r\n    handleMultiStrokeKeyDown,\r\n    {\r\n      event: 'keydown',\r\n    },\r\n    [isInpaintingLoading]\r\n  )\r\n\r\n  // Draw once the original image is loaded\r\n  useEffect(() => {\r\n    if (!original) {\r\n      return\r\n    }\r\n\r\n    if (isOriginalLoaded) {\r\n      const rW = windowSize.width / original.naturalWidth\r\n      const rH = (windowSize.height - TOOLBAR_SIZE) / original.naturalHeight\r\n      if (rW < 1 || rH < 1) {\r\n        const s = Math.min(rW, rH)\r\n        setMinScale(s)\r\n        setScale(s)\r\n      } else {\r\n        setMinScale(1)\r\n      }\r\n\r\n      if (context?.canvas) {\r\n        context.canvas.width = original.naturalWidth\r\n        context.canvas.height = original.naturalHeight\r\n      }\r\n      draw()\r\n    }\r\n  }, [context?.canvas, draw, original, isOriginalLoaded, windowSize])\r\n\r\n  // Zoom reset\r\n  const resetZoom = useCallback(() => {\r\n    if (!minScale || !original || !windowSize) {\r\n      return\r\n    }\r\n    const viewport = viewportRef.current\r\n    if (!viewport) {\r\n      throw new Error('no viewport')\r\n    }\r\n    const offsetX = (windowSize.width - original.width * minScale) / 2\r\n    const offsetY = (windowSize.height - original.height * minScale) / 2\r\n    viewport.setTransform(offsetX, offsetY, minScale, 200, 'easeOutQuad')\r\n    viewport.state.scale = minScale\r\n    setScale(minScale)\r\n  }, [viewportRef, minScale, original, windowSize])\r\n\r\n  const handleEscPressed = () => {\r\n    if (isInpaintingLoading) {\r\n      return\r\n    }\r\n    if (isDraging || isMultiStrokeKeyPressed) {\r\n      clearDrawing()\r\n    } else {\r\n      resetZoom()\r\n    }\r\n  }\r\n\r\n  useKey(\r\n    'Escape',\r\n    handleEscPressed,\r\n    {\r\n      event: 'keydown',\r\n    },\r\n    [\r\n      isDraging,\r\n      isInpaintingLoading,\r\n      isMultiStrokeKeyPressed,\r\n      resetZoom,\r\n      clearDrawing,\r\n    ]\r\n  )\r\n\r\n  const onPaint = (px: number, py: number) => {\r\n    const currShowLine = lines4Show[lines4Show.length - 1]\r\n    currShowLine.pts.push({ x: px, y: py })\r\n\r\n    const currLine = lines[lines.length - 1]\r\n    currLine.pts.push({ x: px, y: py })\r\n\r\n    draw()\r\n  }\r\n\r\n  const onMouseMove = (ev: SyntheticEvent) => {\r\n    const mouseEvent = ev.nativeEvent as MouseEvent\r\n    setCoords({ x: mouseEvent.pageX, y: mouseEvent.pageY })\r\n  }\r\n\r\n  const onMouseDrag = (ev: SyntheticEvent) => {\r\n    if (isPanning) {\r\n      return\r\n    }\r\n    if (!isDraging) {\r\n      return\r\n    }\r\n    const mouseEvent = ev.nativeEvent as MouseEvent\r\n    const px = mouseEvent.offsetX\r\n    const py = mouseEvent.offsetY\r\n    onPaint(px, py)\r\n  }\r\n\r\n  const onPointerUp = () => {\r\n    if (isPanning) {\r\n      return\r\n    }\r\n    if (!original.src) {\r\n      return\r\n    }\r\n    const canvas = context?.canvas\r\n    if (!canvas) {\r\n      return\r\n    }\r\n    if (isInpaintingLoading) {\r\n      return\r\n    }\r\n    if (!isDraging) {\r\n      return\r\n    }\r\n    setIsDraging(false)\r\n    if (isMultiStrokeKeyPressed) {\r\n      lines.push({ pts: [] } as Line)\r\n      setLines([...lines])\r\n\r\n      lines4Show.push({ pts: [] } as Line)\r\n      setLines4Show([...lines4Show])\r\n      return\r\n    }\r\n\r\n    if (lines4Show.length !== 0 && lines4Show[0].pts.length !== 0) {\r\n      runInpainting()\r\n    }\r\n  }\r\n\r\n  const onMouseDown = (ev: SyntheticEvent) => {\r\n    if (isPanning) {\r\n      return\r\n    }\r\n    if (!original.src) {\r\n      return\r\n    }\r\n    const canvas = context?.canvas\r\n    if (!canvas) {\r\n      return\r\n    }\r\n    if (isInpaintingLoading) {\r\n      return\r\n    }\r\n    setIsDraging(true)\r\n    const currLine4Show = lines4Show[lines4Show.length - 1]\r\n    currLine4Show.size = brushSize\r\n    const currLine = lines[lines.length - 1]\r\n    currLine.size = brushSize\r\n\r\n    const mouseEvent = ev.nativeEvent as MouseEvent\r\n    onPaint(mouseEvent.offsetX, mouseEvent.offsetY)\r\n  }\r\n\r\n  const undo = () => {\r\n    if (!renders.length) {\r\n      return\r\n    }\r\n    if (!historyLineCount.length) {\r\n      return\r\n    }\r\n\r\n    const l = lines\r\n    const count = historyLineCount[historyLineCount.length - 1]\r\n    for (let i = 0; i <= count; i += 1) {\r\n      l.pop()\r\n    }\r\n\r\n    setLines([...l, { pts: [] }])\r\n    historyLineCount.pop()\r\n    setHistoryLineCount(historyLineCount)\r\n\r\n    const r = renders\r\n    r.pop()\r\n    setRenders([...r])\r\n  }\r\n\r\n  // Handle Cmd+Z\r\n  const undoPredicate = (event: KeyboardEvent) => {\r\n    const isCmdZ = (event.metaKey || event.ctrlKey) && event.key === 'z'\r\n    // Handle tab switch\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault()\r\n    }\r\n    if (isCmdZ) {\r\n      event.preventDefault()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  useKey(undoPredicate, undo)\r\n\r\n  useKeyPressEvent(\r\n    'Tab',\r\n    ev => {\r\n      ev?.preventDefault()\r\n      ev?.stopPropagation()\r\n      if (hadRunInpainting()) {\r\n        setShowSeparator(true)\r\n        setShowOriginal(true)\r\n      }\r\n    },\r\n    ev => {\r\n      ev?.preventDefault()\r\n      ev?.stopPropagation()\r\n      if (hadRunInpainting()) {\r\n        setShowOriginal(false)\r\n        setTimeout(() => setShowSeparator(false), 300)\r\n      }\r\n    }\r\n  )\r\n\r\n  function download() {\r\n    const name = file.name.replace(/(\\.[\\w\\d_-]+)$/i, '_cleanup$1')\r\n    const currRender = renders[renders.length - 1]\r\n    downloadImage(currRender.currentSrc, name)\r\n  }\r\n\r\n  const onSizeLimitChange = (_sizeLimit: string) => {\r\n    setSizeLimit(_sizeLimit)\r\n  }\r\n\r\n  const toggleShowBrush = (newState: boolean) => {\r\n    if (newState !== showBrush && !isPanning) {\r\n      setShowBrush(newState)\r\n    }\r\n  }\r\n\r\n  const getCursor = useCallback(() => {\r\n    if (isPanning) {\r\n      return 'grab'\r\n    }\r\n    if (showBrush) {\r\n      return 'none'\r\n    }\r\n    return undefined\r\n  }, [showBrush, isPanning])\r\n\r\n  // Photoshop Hotkeys for Brush Size\r\n  useKeyPressEvent('[', () => {\r\n    setBrushSize(currentBrushSize => {\r\n      if (currentBrushSize > 10) {\r\n        return currentBrushSize - 10\r\n      }\r\n      if (currentBrushSize <= 10 && currentBrushSize > 0) {\r\n        return currentBrushSize - 5\r\n      }\r\n      return currentBrushSize\r\n    })\r\n  })\r\n\r\n  useKeyPressEvent(']', () => {\r\n    setBrushSize(currentBrushSize => {\r\n      return currentBrushSize + 10\r\n    })\r\n  })\r\n\r\n  // Toggle clean/zoom tool on spacebar.\r\n  useKeyPressEvent(\r\n    ' ',\r\n    ev => {\r\n      ev?.preventDefault()\r\n      ev?.stopPropagation()\r\n      setShowBrush(false)\r\n      setIsPanning(true)\r\n    },\r\n    ev => {\r\n      ev?.preventDefault()\r\n      ev?.stopPropagation()\r\n      setShowBrush(true)\r\n      setIsPanning(false)\r\n    }\r\n  )\r\n\r\n  const getCurScale = (): number => {\r\n    let s = minScale\r\n    if (viewportRef.current?.state.scale !== undefined) {\r\n      s = viewportRef.current?.state.scale\r\n    }\r\n    // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\r\n    return s!\r\n  }\r\n\r\n  const getBrushStyle = () => {\r\n    const curScale = getCurScale()\r\n    return {\r\n      width: `${brushSize * curScale}px`,\r\n      height: `${brushSize * curScale}px`,\r\n      left: `${x}px`,\r\n      top: `${y}px`,\r\n      transform: 'translate(-50%, -50%)',\r\n    }\r\n  }\r\n\r\n  if (!original || !scale || !minScale) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"flex flex-col items-center\"\r\n      style={{\r\n        height: '100%',\r\n        width: '100%',\r\n      }}\r\n      aria-hidden=\"true\"\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onPointerUp}\r\n    >\r\n      <TransformWrapper\r\n        ref={r => {\r\n          if (r) {\r\n            viewportRef.current = r\r\n          }\r\n        }}\r\n        panning={{ disabled: !isPanning, velocityDisabled: true }}\r\n        wheel={{ step: 0.05 }}\r\n        centerZoomedOut\r\n        alignmentAnimation={{ disabled: true }}\r\n        centerOnInit\r\n        limitToBounds={false}\r\n        doubleClick={{ disabled: true }}\r\n        initialScale={minScale}\r\n        minScale={minScale}\r\n        onZoom={ref => {\r\n          setScale(ref.state.scale)\r\n        }}\r\n      >\r\n        <TransformComponent\r\n          wrapperStyle={{\r\n            width: '100%',\r\n            height: '100%',\r\n          }}\r\n          contentClass={\r\n            isInpaintingLoading\r\n              ? 'animate-pulse-fast pointer-events-none transition-opacity'\r\n              : ''\r\n          }\r\n        >\r\n          <>\r\n            <canvas\r\n              className=\"rounded-sm\"\r\n              style={{ cursor: getCursor() }}\r\n              onContextMenu={e => {\r\n                e.preventDefault()\r\n              }}\r\n              onMouseOver={() => toggleShowBrush(true)}\r\n              onFocus={() => toggleShowBrush(true)}\r\n              onMouseLeave={() => toggleShowBrush(false)}\r\n              onMouseDown={onMouseDown}\r\n              onMouseMove={onMouseDrag}\r\n              ref={r => {\r\n                if (r && !context) {\r\n                  const ctx = r.getContext('2d')\r\n                  if (ctx) {\r\n                    setContext(ctx)\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <div\r\n              className={[\r\n                'absolute top-0 right-0 pointer-events-none',\r\n                'overflow-hidden',\r\n                'border-primary',\r\n                showSeparator ? 'border-l-4' : '',\r\n              ].join(' ')}\r\n              style={{\r\n                width: showOriginal\r\n                  ? `${Math.round(original.naturalWidth)}px`\r\n                  : '0px',\r\n                height: original.naturalHeight,\r\n                transitionProperty: 'width, height',\r\n                transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n                transitionDuration: '300ms',\r\n              }}\r\n            >\r\n              <img\r\n                className=\"absolute right-0\"\r\n                src={original.src}\r\n                alt=\"original\"\r\n                width={`${original.naturalWidth}px`}\r\n                height={`${original.naturalHeight}px`}\r\n                style={{\r\n                  width: `${original.naturalWidth}px`,\r\n                  height: `${original.naturalHeight}px`,\r\n                  maxWidth: 'none',\r\n                }}\r\n              />\r\n            </div>\r\n          </>\r\n        </TransformComponent>\r\n      </TransformWrapper>\r\n\r\n      {showBrush && !isInpaintingLoading && !isPanning && (\r\n        <div\r\n          className=\"hidden sm:block absolute rounded-full border border-primary bg-primary bg-opacity-80 pointer-events-none\"\r\n          style={getBrushStyle()}\r\n        />\r\n      )}\r\n\r\n      <div\r\n        className=\"fixed w-full bottom-0 flex items-center justify-center\"\r\n        style={{ height: '90px' }}\r\n      >\r\n        <div\r\n          className={[\r\n            'flex items-center justify-center space-x-6',\r\n            '',\r\n            // 'bg-black backdrop-blur backdrop-filter bg-opacity-10',\r\n          ].join(' ')}\r\n        >\r\n          <SizeSelector\r\n            value={sizeLimit || '1080'}\r\n            onChange={onSizeLimitChange}\r\n            originalWidth={original.naturalWidth}\r\n            originalHeight={original.naturalHeight}\r\n          />\r\n          <Slider\r\n            label={\r\n              <span>\r\n                <span className=\"hidden md:inline\">Brush</span>\r\n              </span>\r\n            }\r\n            min={10}\r\n            max={150}\r\n            value={brushSize}\r\n            onChange={setBrushSize}\r\n          />\r\n          <div>\r\n            <Button\r\n              className=\"mr-2\"\r\n              icon={<ArrowsExpandIcon className=\"w-6 h-6\" />}\r\n              disabled={scale === minScale}\r\n              onClick={resetZoom}\r\n            />\r\n            <Button\r\n              className=\"mr-2\"\r\n              icon={\r\n                <svg\r\n                  width=\"19\"\r\n                  height=\"9\"\r\n                  viewBox=\"0 0 19 9\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"w-6 h-6\"\r\n                >\r\n                  <path\r\n                    d=\"M2 1C2 0.447715 1.55228 0 1 0C0.447715 0 0 0.447715 0 1H2ZM1 8H0V9H1V8ZM8 9C8.55228 9 9 8.55229 9 8C9 7.44771 8.55228 7 8 7V9ZM16.5963 7.42809C16.8327 7.92721 17.429 8.14016 17.9281 7.90374C18.4272 7.66731 18.6402 7.07103 18.4037 6.57191L16.5963 7.42809ZM16.9468 5.83205L17.8505 5.40396L16.9468 5.83205ZM0 1V8H2V1H0ZM1 9H8V7H1V9ZM1.66896 8.74329L6.66896 4.24329L5.33104 2.75671L0.331035 7.25671L1.66896 8.74329ZM16.043 6.26014L16.5963 7.42809L18.4037 6.57191L17.8505 5.40396L16.043 6.26014ZM6.65079 4.25926C9.67554 1.66661 14.3376 2.65979 16.043 6.26014L17.8505 5.40396C15.5805 0.61182 9.37523 -0.710131 5.34921 2.74074L6.65079 4.25926Z\"\r\n                    fill=\"currentColor\"\r\n                  />\r\n                </svg>\r\n              }\r\n              onClick={undo}\r\n              disabled={renders.length === 0}\r\n            />\r\n            <Button\r\n              className=\"mr-2\"\r\n              icon={<EyeIcon className=\"w-6 h-6\" />}\r\n              onDown={ev => {\r\n                ev.preventDefault()\r\n                setShowSeparator(true)\r\n                setShowOriginal(true)\r\n              }}\r\n              onUp={() => {\r\n                setShowOriginal(false)\r\n                setTimeout(() => setShowSeparator(false), 300)\r\n              }}\r\n              disabled={renders.length === 0}\r\n            >\r\n              {undefined}\r\n            </Button>\r\n\r\n            <Button\r\n              icon={<DownloadIcon className=\"w-6 h-6\" />}\r\n              disabled={!renders.length}\r\n              onClick={download}\r\n            >\r\n              {undefined}\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            className=\"absolute bg-black backdrop-blur backdrop-filter bg-opacity-10 rounded-xl\"\r\n            style={{\r\n              height: '58px',\r\n              width: '600px',\r\n              zIndex: -1,\r\n              marginLeft: '-1px',\r\n            }}\r\n          >\r\n            {undefined}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ArrowLeftIcon } from '@heroicons/react/outline'\r\nimport React, { useState } from 'react'\r\nimport { useToggle, useWindowSize } from 'react-use'\r\nimport Button from './components/Button'\r\nimport FileSelect from './components/FileSelect'\r\nimport ShortcutsModal from './components/ShortcutsModal'\r\nimport Editor from './Editor'\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState<File>()\r\n  const [showShortcuts, toggleShowShortcuts] = useToggle(false)\r\n  const windowSize = useWindowSize()\r\n\r\n  return (\r\n    <div className=\"h-full full-visible-h-safari flex flex-col\">\r\n      <header className=\"absolute z-10 flex w-full p-1 justify-center sm:justify-between items-center sm:items-start  bg-white backdrop-blur backdrop-filter bg-opacity-30\">\r\n        {file ? (\r\n          <Button\r\n            icon={<ArrowLeftIcon className=\"w-6 h-6\" />}\r\n            onClick={() => {\r\n              setFile(undefined)\r\n            }}\r\n          >\r\n            {windowSize.width > 640 ? 'Start new' : undefined}\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {file ? (\r\n          <Button\r\n            onClick={toggleShowShortcuts}\r\n            icon={\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                aria-hidden=\"true\"\r\n                role=\"img\"\r\n                width=\"28\"\r\n                height=\"28\"\r\n                preserveAspectRatio=\"xMidYMid meet\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <rect\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"none\"\r\n                  stroke=\"none\"\r\n                />\r\n                <g fill=\"currentColor\">\r\n                  <path d=\"M14 5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12zM2 4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H2z\" />\r\n                  <path d=\"M13 10.25a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zm0-2a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zm-5 0A.25.25 0 0 1 8.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 8 8.75v-.5zm2 0a.25.25 0 0 1 .25-.25h1.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-1.5a.25.25 0 0 1-.25-.25v-.5zm1 2a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zm-5-2A.25.25 0 0 1 6.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 6 8.75v-.5zm-2 0A.25.25 0 0 1 4.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 4 8.75v-.5zm-2 0A.25.25 0 0 1 2.25 8h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 2 8.75v-.5zm11-2a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zm-2 0a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zm-2 0A.25.25 0 0 1 9.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 9 6.75v-.5zm-2 0A.25.25 0 0 1 7.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 7 6.75v-.5zm-2 0A.25.25 0 0 1 5.25 6h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5A.25.25 0 0 1 5 6.75v-.5zm-3 0A.25.25 0 0 1 2.25 6h1.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-1.5A.25.25 0 0 1 2 6.75v-.5zm0 4a.25.25 0 0 1 .25-.25h.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.5a.25.25 0 0 1-.25-.25v-.5zm2 0a.25.25 0 0 1 .25-.25h5.5a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-5.5a.25.25 0 0 1-.25-.25v-.5z\" />\r\n                </g>\r\n              </svg>\r\n            }\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </header>\r\n\r\n      {showShortcuts && <ShortcutsModal onClose={toggleShowShortcuts} />}\r\n\r\n      <main\r\n        className={[\r\n          'h-full flex flex-1 flex-col sm:items-center sm:justify-center overflow-hidden',\r\n          'items-center justify-center',\r\n        ].join(' ')}\r\n      >\r\n        {file ? (\r\n          <Editor file={file} />\r\n        ) : (\r\n          <>\r\n            <div\r\n              className={[\r\n                'flex flex-col sm:flex-row items-center',\r\n                'space-y-5 sm:space-y-0 sm:space-x-6 p-5 pt-0 pb-10',\r\n              ].join(' ')}\r\n            >\r\n              <div className=\"max-w-xl flex flex-col items-center sm:items-start p-0 m-0 space-y-5\">\r\n                <h1 className=\"text-center sm:text-left text-xl sm:text-3xl\">\r\n                  Image inpainting powered by 🦙\r\n                  <u>\r\n                    <a href=\"https://github.com/saic-mdal/lama\">LaMa</a>\r\n                  </u>\r\n                </h1>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"h-20 sm:h-52 px-4 w-full\"\r\n              style={{ maxWidth: '800px' }}\r\n            >\r\n              <FileSelect\r\n                onSelection={async f => {\r\n                  setFile(f)\r\n                }}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}